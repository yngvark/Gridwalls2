apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: map-info-producer
  labels:
    app: map-info-producer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: map-info-producer
    spec:
      containers:
      - name: app
        image: eu.gcr.io/gridwalls2/map-info-producer:latest
        args: ["/app_data/in", "/app_data/out"]
        imagePullPolicy: Always
        volumeMounts:
          - name: named-pipes
            mountPath: /app_data
      - name: netcom-forwarder
        image: eu.gcr.io/gridwalls2/netcom_forwarder:latest
        args: ["/app_data/out", "/app_data/in", "rabbithost-rabbitmq"]
        imagePullPolicy: Always
        volumeMounts:
          - name: named-pipes
            mountPath: /app_data
        env:
        - name: RABBITMQ_USERNAME
          value: "user"
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rabbithost-rabbitmq
              key: rabbitmq-password
      - name: init
        image: alpine
        command: ["/bin/sh"]
        args: ["-c", "mkdir -p /app_data && echo Before: && ls -lrt /app_data && rm -f /app_data/in && rm -f /app_data/out && mkfifo /app_data/in && mkfifo /app_data/out && echo After: && ls -lrt /app_data && sleep 99999999"]
        volumeMounts:
          - name: named-pipes
            mountPath: /app_data
      volumes:
        - name: named-pipes
          emptyDir: {}
